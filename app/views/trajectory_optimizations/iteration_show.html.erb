<%= render partial: "layouts/title", locals: { id: @optimization.id, title: @optimization.episode.name } %>
<div class="columns">
  <div class="column col-5" style="padding:15px;padding-bottom:0px;">
    <h4><a id="inspect" href="#inspect" style="text-decoration:none;">Brief Inspection</a></h4>
  </div>
  <div class="column col-7" style="margin-top:20px;padding:15px;text-align:right;">
    <ul class="pagination" style="margin:0;padding:0;">
      <li class="page-item">
        <a href="/trajectory_optimizations/<%= @optimization.id %>">All</a>
      </li>
      <% (0...@optimization.max_iteration_count).each do |i| %>
        <li class="page-item<%= " active" if i == @iteration_id %>">
          <a href="/trajectory_optimizations/<%= @optimization.id %>/<%= i %>"><%= i %></a>
        </li>
      <% end %>
    </ul>
  </div>
</div>
<div class="divider"></div>
<div class="columns">
  <div class="column col-12" style="padding:15px;padding-bottom:0px;">
    <h4><a id="simulator_log_list" href="#simulator_log_list" style="text-decoration:none;">TrajectoryOptimization.simulator_log_list[<%= @iteration_id %>]</a></h4>
    <span>Simulator Log from client.</span>
    <span><strong>Must be formatted in JSON</strong></span>
    <%= render partial: "layouts/chart_multiple", locals: { title: "simulator_log", data: [JSON.parse(@refined_ref_states), JSON.parse(@optimization.simulator_log_list)[@iteration_id], JSON.parse(@refined_sim_states)].to_json, keys: ["x", "y", "z", "rx", "ry", "rz"] } %>
    <h6 data-id="simulator_log_list_code" class="copy">Raw Data</h6>
    <pre id="simulator_log_list_code" class="code lang-js" style="height:84px;"><%= json_stringify(@refined_sim_states, nil, true) -%></pre>
  </div>
</div>
<script type="text/javascript">
  const codeBlocks = document.getElementsByTagName("pre");
  for (let i = 0; i < codeBlocks.length; i++) {
    const block = codeBlocks[i];
    block.onmouseover = () => block.style.height = 'auto';
    block.onmouseout = () => block.style.height = '84px';
  }
</script>
<script>
  var copyToClipboard = (event) => {
    var target = document.querySelector('#' + event.target.dataset.id);
    var range = document.createRange();
    range.selectNode(target);
    window.getSelection().removeAllRanges();
    window.getSelection().addRange(range);
    try {
      var successful = document.execCommand('copy');
      console.log(successful? 'Successfully copied to clipboard' : 'Copy to clipboard failed');
    } catch(err) {
      alert('Could not copy to clipboard');
    }
  };
  document.querySelectorAll('.copy').forEach(button => button.addEventListener('click', copyToClipboard));
</script>
