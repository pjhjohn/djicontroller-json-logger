<% if JSON.parse(data).empty? %>
  <h6>3D Render</h6>
  <h2>Empty Data</h2>
<% else %>
  <h6 id="<%= title %>_3d_viewer_header">3D Render</h6>
  <canvas id="<%= title %>_3d_viewer" style="width:100%;height:600px;"></canvas>
  <script>
  {
    // Data
    const data = <%= raw data %>;
    const geom = new THREE.Geometry();
    data.map(datum => geom.vertices.push(new THREE.Vector3(datum.x, datum.y, datum.z)));

    // Time, Canvas, Renderer and its Viewport
    const clock = new THREE.Clock();
    const canvas = document.getElementById('<%= title %>_3d_viewer');
    const renderer = new THREE.WebGLRenderer({canvas: canvas});
    canvas.width  = canvas.clientWidth;
    canvas.height = canvas.clientHeight;
    renderer.setViewport(0, 0, canvas.clientWidth, canvas.clientHeight);

    // ThreeJS Scene & Camera
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth/canvas.clientHeight, 0.1, 1000);
    camera.position.x = 2;
    camera.position.y = 2;
    camera.position.z = 2;

    // Camera Controls
    const cameraControls = new THREE.TrackballControls(camera, renderer.domElement);
    cameraControls.target.set(0, 0, 0);

    // Grid & Axis
    const gridHelper = new THREE.GridHelper(5, 10);
    scene.add(gridHelper);
    const axisHelper = new THREE.AxisHelper(2);
    scene.add(axisHelper);

    // Trajectory
    const mLine = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: 3});
    const trajectory = new THREE.Line(geom, mLine);
    scene.add(trajectory);

    // Points
    const mPoints = new THREE.PointsMaterial({ color: 0x777777, size: 5, sizeAttenuation: false });
    const points = new THREE.Points(geom, mPoints);
    scene.add(points);

    // Lighting
    const light = new THREE.DirectionalLight(0xffffff, 0.55);
    light.position.set(0, 0, 1);
    scene.add(light);

    // Render Main Loop
    const render = function () {
      const delta = clock.getDelta();

      requestAnimationFrame(render);
      cameraControls.update(delta);
      renderer.render(scene, camera);
    };
    render();
  }
  </script>
<% end %>
