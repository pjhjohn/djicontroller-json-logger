<% if JSON.parse(data).empty? %>
  <h6>3D Render</h6>
  <h2>Empty Data</h2>
<% else %>
  <h6 id="<%= title %>_3d_viewer_header">3D Render</h6>
  <canvas id="<%= title %>_3d_viewer" style="width:100%;height:600px;"></canvas>
  <script>
  {
    // Data
    const data = <%= raw data %>;

    // Canvas, Renderer and its Viewport
    const canvas = document.getElementById('<%= title %>_3d_viewer');
    const renderer = new THREE.WebGLRenderer({canvas: canvas});
    canvas.width  = canvas.clientWidth;
    canvas.height = canvas.clientHeight;
    renderer.setViewport(0, 0, canvas.clientWidth, canvas.clientHeight);

    // ThreeJS Scene & Camera
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth/canvas.clientHeight, 0.1, 1000);
    camera.position.z = 3;

    // Grid Helper
    const helper = new THREE.GridHelper( 200, 10 );
    helper.setColors( 0x0000ff, 0x808080 ); // blue central line, gray grid
    helper.position.y = - 150;
    scene.add( helper );

    // Trajectory Line
    const material = new THREE.LineBasicMaterial({ color: 0x0000ff });
    const points = new THREE.Geometry();
    data.map(datum => points.vertices.push(new THREE.Vector3(datum.x, datum.y, datum.z)));
    const trajectory = new THREE.Line(points, material);
    scene.add(trajectory);

    // Lighting
    const light = new THREE.DirectionalLight(0xffffff, 0.55);
    light.position.set(0, 0, 1);
    scene.add(light);

    // Render Main Loop
    const render = function () {
      requestAnimationFrame( render );
      renderer.render(scene, camera);
    };
    render();
  }
  </script>
<% end %>
