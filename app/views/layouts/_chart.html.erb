<% if data == "null" or JSON.parse(data).empty? %>
  <h6>Chart</h6>
  <h2>Empty Data</h2>
<% else %>
  <h6 id="<%= title %>_chart_header" class="chart-header">Chart</h6>
  <canvas id="<%= title %>_chart"></canvas>
  <script>
  {
    const ctx = document.getElementById('<%= title %>_chart').getContext('2d');
    const listByKey = (key) => data.map(obj => obj[key]);
    //noinspection JSAnnotator
    const data = <%= raw data %>;
    //noinspection JSAnnotator
    const keys = <%= raw keys %>;
    let displayLegend = true;
    const labels = {
      x: "x",
      y: "y",
      z: "z",
      rx: "rx",
      ry: "ry",
      rz: "rz",
      dx: "dx",
      dy: "dy",
      dz: "dz",
      dyaw: "dyaw",
    };
    const colors = {
      x: "rgb(255, 127, 127)",
      y: "rgb(127, 255, 127)",
      z: "rgb(127, 127, 255)",
      rx: "rgb(127, 255, 255)",
      ry: "rgb(255, 127, 255)",
      rz: "rgb(255, 255, 127)",
      dx: "rgb(255, 127, 127)",
      dy: "rgb(127, 255, 127)",
      dz: "rgb(127, 127, 255)",
      dyaw: "rgb(127, 127, 127)",
      white: "#fff",
    };
    const <%= title %>Chart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: listByKey("t"),
        datasets: keys.map(key => ({
          label: labels[key],
          fill: false,
          borderColor: colors[key],
          pointBorderColor: colors[key],
          pointBackgroundColor: colors.white,
          pointHoverBackgroundColor: colors[key],
          pointHoverBorderColor: colors.white,
          data: listByKey(key),
        }))
      },
      options: {
        scales: {
          yAxes: [{
            id: 'position',
            type: 'linear',
            position: 'left',
            scaleLabel: {
              display: true,
              labelString: 'Position : x, y, z in [m]      Velocity : dx, dy, dz in [m/s]'
            }
          },
          {
            id: 'rotation',
            type: 'linear',
            position: 'right',
            scaleLabel: {
              display: true,
              labelString: 'Rotation Angle : rx, ry, rz in [degree]      Rotation Angular Velocity : dyaw in [degree/s]'
            }
          }]
        },
        legend: {
          display: displayLegend
        }
      }
    });
    document.querySelector('#<%= title %>_chart_header').addEventListener('click', (event) => {
      <%= title %>Chart.config.options.legend.display = displayLegend = !displayLegend;
      <%= title %>Chart.update();
    });
  }
  </script>
<% end %>
