<% if data == "null" or JSON.parse(data).empty? %>
  <h6>Chart</h6>
  <h2>Empty Data</h2>
<% else %>
  <h6 id="<%= title %>_chart_header" class="chart-header">Chart</h6>
  <canvas id="<%= title %>_chart"></canvas>
  <script>
  {
    const ctx = document.getElementById('<%= title %>_chart').getContext('2d');
    const listByKey = (key) => data.map(obj => obj[key]);
    // noinspection JSAnnotator
    const data = <%= raw data %>;
    // noinspection JSAnnotator
    const domain = "<%= domain %>";
    const keys = { t: ["position", "rotation", "total"], iteration: ["error_score"] };
    const labelString = {
      t: {
        x: 'Time',
        y: 'TotalScore Root Mean Weighted Squared Sum',
      },
      iteration: {
        x: 'Number of Iteration',
        y: 'Position : length^2     Rotation : angle^2',
      },
    };
    let displayLegend = true;
    const labels = { position: "Position Distance",  rotation: "Rotation Distance",  total: "Total Distance", error_score: "Error Score" };
    const colors = { position: "#FF7777", rotation: "#7777FF", total: "#BB70FF", error_score: "#000000" };
    const <%= title %>Chart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: listByKey(domain),
        datasets: keys[domain].map(key => ({
          label: labels[key],
          fill: false,
          borderColor: colors[key],
          pointBorderColor: colors[key],
          pointBackgroundColor: colors.white,
          pointHoverBackgroundColor: colors[key],
          pointHoverBorderColor: colors.white,
          data: listByKey(key),
        }))
      },
      options: {
        scales: {
          xAxes: [{
            scaleLabel: {
              display: true,
              labelString: labelString[domain].x,
            },
            ticks: {
              beginAtZero:true,
            },
          }],
          yAxes: [{
            type: 'logarithmic',
            position: 'left',
            scaleLabel: {
              display: true,
              labelString: labelString[domain].y,
            },
            ticks: {
              min: Math.pow(10, -2),
              max: Math.pow(10, 1),
            },
          }],
        },
        legend: {
          display: displayLegend,
        },
      },
    });
    document.querySelector('#<%= title %>_chart_header').addEventListener('click', (event) => {
      <%= title %>Chart.config.options.legend.display = displayLegend = !displayLegend;
      <%= title %>Chart.update();
    });
  }
  </script>
<% end %>
